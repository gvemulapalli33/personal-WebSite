{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Image.js","webpack:///./src/pages/about.js","webpack:///./src/utils/helpers.js"],"names":["Image","forwardRef","_ref","ref","bsPrefix","className","fluid","rounded","roundedCircle","thumbnail","props","classes","createElement","displayName","defaultProps","data","site","siteMetadata","author","occupation","unemployed","toString","useContext","ThemeContext","title","width","height","src","alt","to","href","target","rel","query","getImageMap","images","regex","hasMultipleImages","limit","reduce","map","image","slug","node","relativePath","match","hasOwnProperty","length","push","childImageSharp","arr"],"mappings":"6FAAA,kFAWIA,EAAQ,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAQJ,EAAKI,MACbC,EAAUL,EAAKK,QACfC,EAAgBN,EAAKM,cACrBC,EAAYP,EAAKO,UACjBC,EAAQ,YAA8BR,EAAM,CAAC,WAAY,YAAa,QAAS,UAAW,gBAAiB,cAE/GE,EAAW,YAAmBA,EAAU,OACxC,IAAIO,EAAU,IAAWL,GAASF,EAAW,SAAUG,GAAW,UAAWC,GAAiB,iBAAkBC,GAAaL,EAAW,cACxI,OAAoB,IAAMQ,cAAc,MAAO,YAAS,CAEtDT,IAAKA,GACJO,EAAO,CACRL,UAAW,IAAWA,EAAWM,SAGrCX,EAAMa,YAAc,QACpBb,EAAMc,aAzBa,CACjBR,OAAO,EACPC,SAAS,EACTC,eAAe,EACfC,WAAW,GAsBE,O,0LCzBA,sBAAe,IAAD,IAAXM,KAKPC,KAAKC,aAHZC,EAFyB,EAEzBA,OACAC,EAHyB,EAGzBA,WACAC,EAJyB,EAIzBA,WAEMC,EAAaC,qBAAWC,KAAxBF,SAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,MAAM,aACX,kBAAC,IAAD,CAAWA,MAAM,aACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEjB,SAAO,EACPkB,MAAM,MACNC,OAAO,MACPC,IAAG,oBAAsBN,IAAtB,OACHO,IAAKV,IAEP,6BAASb,UAAU,oBACjB,uBAAGA,UAAU,iBAAb,2BAC0B,8BAAOa,GADjC,WAGE,2BAAIC,GAHN,sCAKA,uBAAGd,UAAU,OAAb,gBACe,kBAAC,OAAD,CAAMwB,GAAG,aAAT,YADf,mCAKF,6BAASxB,UAAU,eAChBe,GACC,oCACE,6BACA,uBAAGf,UAAU,cACX,uCACO,sEADP,0BAEgB,kBAAC,OAAD,CAAMwB,GAAG,WAAT,OAFhB,kBAIE,uBACEC,KAAK,mCACLC,OAAO,SACPC,IAAI,uBAHN,SAJF,OAgBN,iCAOH,IAAMC,EAAK,c,0KCjEH,G,UAAA,CACbC,YAAa,SAACC,EAAQC,EAAOC,EAA2BC,GACtD,YADoE,IAAzCD,OAAoB,QAAqB,IAAdC,MAAQ,GACvDH,EAAOI,QAAO,SAACC,EAAKC,GACzB,IAAMC,EAAOD,EAAME,KAAKC,aAAaC,MAAMT,GAAO,GAClD,GAAIC,EACF,GAAIG,EAAIM,eAAeJ,GACjBF,EAAIE,GAAMK,QAAUT,GACtBE,EAAIE,GAAMM,KAAKP,EAAME,KAAKM,gBAAgB3C,WACvC,CACL,IAAM4C,EAAM,GACZA,EAAIF,KAAKP,EAAME,KAAKM,gBAAgB3C,OACpCkC,EAAIE,GAAQQ,OAGdV,EAAIE,GAAQD,EAAME,KAAKM,gBAAgB3C,MAEzC,OAAOkC,IACN","file":"component---src-pages-about-js-716139e2578c65d875dc.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import React, { useContext } from \"react\"\nimport { PageLayout, PageTitle } from \"../components\"\nimport { Container, Image } from \"react-bootstrap\"\nimport { Link, graphql } from \"gatsby\"\nimport { ThemeContext, SEO } from \"../utils\"\n\nexport default ({ data }) => {\n  const {\n    author,\n    occupation,\n    unemployed\n  } = data.site.siteMetadata\n  const { toString } = useContext(ThemeContext)\n  \n  return (\n    <PageLayout>\n      <SEO title=\"About Me\" />\n      <PageTitle title=\"About Me\" />\n      <Container>\n        <Image\n          rounded\n          width=\"140\"\n          height=\"140\"\n          src={`../../icons/luke-${toString()}.png`}\n          alt={author}\n        />\n        <article className=\"w-75 m-auto pt-2\">\n          <p className=\"i-5 mt-4 pt-2\">\n            Hello there! My name is <b>{`${author}`}</b>. I am \n            &nbsp;\n            <b>{occupation}</b> discovering the ways of the code. \n          </p>\n          <p className=\"i-5\">\n            Check out my <Link to=\"/projects\">projects</Link> to see what I've\n            been up to!.\n          </p>\n        </article>\n        <article className=\"w-75 m-auto\">\n          {unemployed && (\n            <>\n              <hr />\n              <p className=\"unemployed\">\n                <small>\n                  I am <b>currently looking for new opportunities</b>! If you\n                  like what you <Link to=\"/resume\">see</Link>, let's get\n                  in&nbsp;\n                  <a\n                    href=\"mailto:madhurigeetha33@gmail.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    touch\n                  </a>\n                  !\n                </small>\n              </p>\n            </>\n          )}\n          <hr />\n        </article>\n      </Container>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        unemployed\n        occupation\n        author\n      }\n    }\n  }\n`\n","export default {\n  getImageMap: (images, regex, hasMultipleImages = false, limit = 3) => {\n    return images.reduce((map, image) => {\n      const slug = image.node.relativePath.match(regex)[0]\n      if (hasMultipleImages) {\n        if (map.hasOwnProperty(slug)) {\n          if (map[slug].length <= limit)\n            map[slug].push(image.node.childImageSharp.fluid)\n        } else {\n          const arr = []\n          arr.push(image.node.childImageSharp.fluid)\n          map[slug] = arr\n        }\n      } else {\n        map[slug] = image.node.childImageSharp.fluid\n      }\n      return map\n    }, {})\n  },\n}\n"],"sourceRoot":""}